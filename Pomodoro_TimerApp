import tkinter as tk
from tkinter import messagebox
import math

# ---------------------------- CONSTANTS ------------------------------- #
WORK_MIN = 25
SHORT_BREAK_MIN = 1    # 2-minute short break
LONG_BREAK_MIN = 20

reps = 0
timer = None
paused = False
remaining_time = 0
next_session_type = None  # Track session to trigger popup AFTER timer starts

# ---------------------------- TIMER STOP ------------------------------- #
def stop_timer():
    global paused
    global remaining_time
    paused = True
    if timer:
        window.after_cancel(timer)

# ---------------------------- TIMER RESET ------------------------------- #
def reset_timer():
    global reps, paused, remaining_time, timer, next_session_type
    if timer:
        window.after_cancel(timer)
    reps = 0
    paused = False
    remaining_time = 0
    next_session_type = None
    timer_label.config(text="00:00")
    title_label.config(text="Pomodoro Timer", fg="black")
    check_label.config(text="")

# ---------------------------- TIMER START / RESUME ------------------------------- #
def start_timer():
    global reps, paused, next_session_type
    if paused and remaining_time > 0:
        paused = False
        count_down(remaining_time)
    else:
        reps += 1
        if reps % 8 == 0:
            title_label.config(text="Long Break", fg="red")
            next_session_type = "long"
            count_down(LONG_BREAK_MIN * 60)
        elif reps % 2 == 0:
            title_label.config(text="Short Break", fg="blue")
            next_session_type = "short"
            count_down(SHORT_BREAK_MIN * 60)
        else:
            title_label.config(text="Work", fg="green")
            next_session_type = "work"
            count_down(WORK_MIN * 60)

# ---------------------------- COUNTDOWN ------------------------------- #
def count_down(count):
    global timer, paused, remaining_time, next_session_type
    minutes = math.floor(count / 60)
    seconds = count % 60
    if seconds < 10:
        seconds = f"0{seconds}"
    timer_label.config(text=f"{minutes}:{seconds}")
    remaining_time = count

    if count == SHORT_BREAK_MIN * 60 and next_session_type == "short":
        window.after(500, lambda: messagebox.showinfo("Break Time", "Take a short break and stretch your legs!"))
        next_session_type = None

    if count > 0 and not paused:
        timer = window.after(1000, count_down, count - 1)
    elif count == 0:
        start_timer()
        check_label.config(text="âœ”" * (reps // 2))

# ---------------------------- UI SETUP ------------------------------- #
window = tk.Tk()
window.title("Pomodoro Timer")
window.config(padx=50, pady=30, bg="#f0f0f0")

title_label = tk.Label(text="Pomodoro Timer", font=("Arial", 32, "bold"), bg="#f0f0f0", fg="black")
title_label.pack(pady=10)

timer_label = tk.Label(text="00:00", font=("Arial", 48), bg="#f0f0f0", fg="black")
timer_label.pack(pady=10)

button_frame = tk.Frame(bg="#f0f0f0")
button_frame.pack()

start_button = tk.Button(button_frame, text="Start", command=start_timer, font=("Arial", 14), width=10, bg="green", fg="white")
start_button.grid(row=0, column=0, padx=5)

pause_button = tk.Button(button_frame, text="Pause", command=stop_timer, font=("Arial", 14), width=10, bg="orange", fg="white")
pause_button.grid(row=0, column=1, padx=5)

reset_button = tk.Button(button_frame, text="Reset", command=reset_timer, font=("Arial", 14), width=10, bg="gray", fg="white")
reset_button.grid(row=0, column=2, padx=5)

check_label = tk.Label(text="", font=("Arial", 18), bg="#f0f0f0", fg="green")
check_label.pack(pady=10)

window.mainloop()
